=== SETUP ===

-> npm install *bootstrap* // chech official page for the correct naming
-> html script load order
	-> 1. -> jquery
	-> 2. -> tether
	-> 3. -> boostrap
	-> 4... -> custom JS
-> load css

=== BAsic Styles ===

--> Typography
	-> <div class="h1....h6"> -> same visual effect as <h1>..., but not semantic
	-> <div class="display-1.2.3.."> -> bigger font than h1..for some dramatic effects
	-> <p class="lead"> -> makes that p a lead p -> bigger with more spacing

--> Text Align
	-> <p class="text-XX-POS"> -> specifies the alignment for a particular break point
		-> sm, md, lg, xl; pos => left, center, right
	-> <p class="text-nowrap"> -> forces the text to stay in one line -> breaks grid
	-> <p class="text-justify"> -> alignes left and right
	-> <p class="text-lowercase//text-uppercase//text-capitalize">

--> Lists
	-> <ul class="list-unstyled"> // removes the bullets
	-> <ul class="list-inline"> + every <li class="list-inline-item"> // removes bullets and inlines

--> Colors
	-> <p class="text-info"> // -> changes color
		-> possible options: info, success, warning, danger, white
	-> <p class="bg-info"> //-> changes the background color

--> Images
	-> <img class="fluid"> // makes the img fit its container and resize on break points
	-> <img class="rounded"> // slight rounded edges // can choose direction (top, left, bottom, right)
	-> <img class="float left/right"> // floats the image
	-> <img class="mx-auto"> // centers the image if defined as display:block


=== LAYOUT ===

-> 3 parts: container -> row -> columns

--> container
-> used to hold the rows and columns and provide basic alignment // defines the overall width for the content
	-> class="container" -> provides 15px padding + centers the content + snaps at break points
	-> class="container-fluid" -> provides 15px padding + extends edge to edge, no snapping


--> rows
-> used to prepare content for layout
-> provide grouping of elements to be structured
-> creates the 12 column grid


--> columns
-> provide the actual structure of the layout
-> syntax -> "col-BP-SIZE"
	BP: sm, md, lg, xl
	SIZE: 1-12 ==> 12 == 100% viewport, 6 == 50% of the viewport, etc....
-> examples:
	-> "col" -> will try to fix everything on one row and only when content is too wide, then it will break on the next line
	-> "col-md" -> will act as a normal "col", when viewport is equal to or less than md, content will be forced on a single row
	-> "col-md-6" -> content will take 50% of viewport when screen is bigger than md, equal to or less than md -> single row
-> can combine to achieve screen-width versatility
	-> "col-md-6 col-lg-3"
		-> when screen is bigger than lg -> content will take 3/12 spaces
		-> when screen is between md and lg -> content will take 6/12 spaces
		-> when screen is less than md -> content will take the full row -> 12/12 spaces

-> column offset
-> used to push columns from left to right
-> example
	"offset-md-1" -> will push the column one space to the right starting from the md break point


->nexting
-> used to fine tune column layout
-> inside a column, place a new row and inside that row I have a fresh 12 column layout


-> reordering columns
-> push & pull
	-> "push-md-4" -> moves the column 4 units to the right at md+
	-> "pull-md-4" -> moves the column 4 units to the left at md+

-> flex -> for simpler tasks, easier
	-> "flex-md-last" -> the column is moved to the last position at md+
	-> can use first, last, unordered

-> alignment

-> row-level
	-> "align-items-center/start/end" -> vertical alignment for all columns in relation to the row height
	-> "justify-content-center/start/end/around/between" -> horizontal alignment for all colums in relation to the row widht
		-> make sure not all 12 column spaces are used

-> col-level
	-> "align-self-center/start/end" -> vertical alignment for indv colums in relation to the row height


-> positioning
-> "fixed-top/bottom" -> sticks the element to the top or bottom of the page
	-> takes it out of the html flow
	-> will cover other elements under it
	-> will stick to the position even when scrolling
-> "sticky-top" -> sticks the element to the top/current position, but does not take it out of the html flow
		-> does not cover elements under it
		-> remains at the top when scrolling


-> "d-inline/block/inline-block" // works just like display: block/inline/inline-block
-> "d-flex" // defines flex container -> used on the wrapper or container of items
		-> the child elements can now be controlled by flex
		-> can add break points "d-sm-flex"
		-> can make the parent element inline: "d-sm-inline-flex"


-> flex container options

-> "d-BP-flex" applied in a parent div, for example, with child divs for the elements, for example

-> "flex-BP-row/column" -> row -> default, forces the children to arrange in a single row
		        -> column -> forces the children to arrange beneath each other



-> "justify-content-BG-ALG" // aligns the items relative to the flex container
	-> ALG: start, end, center, between, around


-> "flex-wrap/nowrap" -> wierd... + align-content-ALG ... also wierd

-> "align-self-BP-ALG" -> aligns individual elements within the flex container
	-> "align-self-end" -> for parent flex-column will send the element to the end horizontally
			    -> for parent flex-row will send the element ot the bottom vertically

-> other layout options

-> "float-BP-left/right/none" -> works just like normal float
	-> "clearfix" -> clears the floating


-> "p/m+t/l/b/r/x/y-BP-1/2/3/4/5/auto" -> applies padding/margin
	-> example "mt-1" -> applies 0.25 rem margin top

-> "w/h/mh/mw-25/50/75/100" -> width, height, max height, max width + 25/50/75/100% of the container

-> "invisible" -> equivalent to making the element with opacity 0 => hides, but keeps the space

-> "hidden-BP-up/down" -> removes the element from the page and doesn't keep space
	-> "hidden-md-up" -> will remove the element from md and higher
	-> "hidden-md-down" -> will remove the element from md and lower


=== NAV ===


--> basic structure
	-> <nav class="nav">
		<a class="nav-item nav-link" href="">Link</a>


--> basic styles
	-> "active", "disabled" -> straight forward, disabled does not disable the link, only visual
	-> inside <nav> "nav-tabs/nav-pills" -> basic styling
	-> inside <nav> "justify-content-ALG" -> aligns the entire nav, useful for centering
	-> inside <nav> "nav-justified" -> makes all nav-items the same width
	-> inside <nav> "nav-fill" -> makes all nav-items, but allows longer content to expand the item
	-> inside <nav> "flex-column" -> makes the nav vertical -> can add BP for hamburger menu prep


=== NAVBAR ===

--> pretty much the same as simple nav with flex-column set

<nav class="navbar navbar-toggleable-sm">
  <div class="container">
    <a class="navbar-brand" href="#">Some Branding</a>
    <div class="navbar-nav">
      <a class="nav-item nav-link active" href="#">Home</a>
      <a class="nav-item nav-link" href="#">Mission</a>
      <a class="nav-item nav-link" href="#">Services</a>
      <a class="nav-item nav-link" href="#">Staff</a>
      <a class="nav-item nav-link disabled" href="#">Testimonials</a>
    </div>
  </div>
</nav>



= DROPDOWN SETUP =

      <div class="dropdown">
        <a class="nav-item nav-link dropdown-toggle" href="#" data-toggle="dropdown">Services</a>
        <div class="dropdown-menu">
          <a class="dropdown-item" href="#">Item One</a>
          <a class="dropdown-item" href="#">Item Two</a>
          <a class="dropdown-item" href="#">Item Three</a>
        </div>
      </div>

= NAV FORMS =

-> between navbar and navbar-nav

    <form class="form-inline">
      <input class="form-control" type="text">
      <button class="btn btn-info">GO</button>
    </form> 


= NAV PLACEMENT =

-> using "fixed-top/bottom", "sticky-top" --> same as before

= HAMBURGER

  <nav class="navbar navbar-inverse bg-primary navbar-toggleable-sm">

    <a href="#" class="navbar-brand">Wisdom Pet Medicine</a>

    <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#hamburger">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="hamburger">
      <div class="navbar-nav">
        <a class="nav-item nav-link active" href="#">Home</a>
        <a class="nav-item nav-link" href="#">Mission</a>
        <a class="nav-item nav-link" href="#">Services</a>
        <a class="nav-item nav-link" href="#">Staff</a>
        <a class="nav-item nav-link" href="#">Testimonials</a>
      </div>
    </div>

    <!-- navbar-nav -->
  </nav>


=== BASIC STYLES


--> buttons
	-> "btn" - base class
	-> can be added to <a>, <button>, <input>
	-> "btn-(outline)-COLOR", like info, primary, secondary, success, warning, danger
	->"btn-block" -> full width
	-> "btn-lg/sm" -> different sizes
	-> "active/disabled"

-> button group -> div wrapper around several buttons: "btn-group"/"btn-group-vertical"/"btn-group-sm/lg"
-> button toolbar -> div wrapper around btn-groups: "btn-toolbar"

--> badges

-> visually the same as btns
-> used inside spans
-> use cases: "badge badge-COLOR badge-pill"


--> progress bars


    <div class="progress">
      <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" style="width: 85%">85%</div>
    </div>

    <div class="progress">
      <div class="progress-bar bg-info" style="width: 15%">15%</div>
      <div class="progress-bar bg-warning" style="width: 30%">30%</div>
    </div>


--> list groups

-> useful for grouping <a>, <li>, <button> -> cool style, vertical
-> wrap the items in a div with "list-group"
-> each item should have:
	-> "list-group-item" -> basic requirement
	-> "list-group-item-action" -> adds hover and visual efect that the item can be clicked
	-> "justify-content-ALG" -> used to align the elements of the individual item
	-> commonly used with badges inside the item content


--> Breadcrumbs

        <nav class="breadcrumb">
          <a class="breadcrumb-item" href="#">Home</a>
          <a class="breadcrumb-item" href="#">Exotic Pets</a>
          <span class="breadcrumb-item active">Nutrition</span>
        </nav>

// change the separator

    .breadcrumb-item+.breadcrumb-item::before {
        content: '>';
    }


=== LAYOUT COMPONENTS ===

--> jumbotron
-> useful for making main homepage info element

<div class="jumbotron">....content...</div>

-> good combo is "jumbotron jumbotron-fluid" -> deletes the rounded edges and extra spacing


--> tables

-> classes for <table>
	-> "table" -> main, required!
	-> "table-responsive"
	-> "table-inverse" -> kind of ugly (blank on white)
	-> "table-striped" -> cool
	-> "table-hover"
	-> "table-sm" -> deleted spaces
-> classes for <thead>
	-> "thead-inverse"
-> classes for <tr>
	-> "table-success" -> applied to entire row
	-> "table-active...warning...danger...info..."



--> Cards

    <section class="card card-outline-danger">
      <img class="img-fluid card-img-top card-img-bottom" src="" alt="">
      <div class="card-block card-img-overlay">
        <h2 class="card-title">Dr. Stanley Winthrop</h2>
        <h5 class="card-subtitle">Behaviorist</h5>
        <p class="card-text">Dr. Winthrop is the guardian of Missy, a three-year old Llaso mix, who he adopted at the shelter. Dr. Winthrop is
          passionate about spay and neuter and pet adoption, and works tireless hours outside the clinic, performing free
          spay and neuter surgeries for the shelter.</p>
        <a class="card-link" href="#">About Me</a>
        <a class="card-link" href="#">My Pets</a>
        <a class="card-link" href="#">Client Slideshow</a>
      </div>
    </section>


-> more styles for cards

    <section class="mb-5 card card-outline-danger" id="drwinthrop">
      <header class="card-header">Stanley Winthrop</header>
      <header class="card-header">
        <nav class="nav nav-tabs ">
          <a class="nav-link nav-item active" href="#">About Me</a>
          <a class="nav-link nav-item" href="#">My Pets</a>
          <a class="nav-link nav-item" href="#">Client Slideshow</a>
        </nav>
      </header>
      <img class="img-fluid" src="images/doctor-winthrop.jpg" alt="Doctor Winthrop Photo">
      <div class="card-block">
        <h5 class="card-subtitle">Behaviorist</h5>
        <p class="card-text">Dr. Winthrop is the guardian of Missy, a three-year old Llaso mix, who he adopted at the shelter. Dr. Winthrop is
          passionate about spay and neuter and pet adoption, and works tireless hours outside the clinic, performing free
          spay and neuter surgeries for the shelter.</p>
      </div>
      <div class="list-group list-group-flush">
        <a class="list-group-item list-group-item-action" class="card-link" href="#">About Me</a>
        <a class="list-group-item list-group-item-action" class="card-link" href="#">My Pets</a>
        <a class="list-group-item list-group-item-action" class="card-link" href="#">Client Slideshow</a>
      </div>
      <footer class="card-footer">
        <a class="card-link" href="#">About Me</a>
        <a class="card-link" href="#">My Pets</a>
        <a class="card-link" href="#">Client Slideshow</a>
      </footer>
    </section>

--> card layouts

-> option 1 -> wrap all card in a row and wrap individual cards in col each
-> option 2 -> <div class="container d-flex flex-wrap justify-content-between"> + widths for each card
-> option 3 -> <div class="container card-group">
	    -> <div class="container card-deck">
	    -> <div class="container card-columns"> ---> pinterest-style -> I like it 


--> media

    <section class="media" id="drwinthrop">
      <img class="img-fluid d-flex align-self-center mr-3 rounded w-25" src="images/doctor-winthrop.jpg" alt="Doctor Winthrop Photo">
      <div class="media-body">
        <h2>Dr. Stanley Winthrop</h2>
        <h5>Behaviorist</h5>
        <p>Dr. Winthrop is the guardian of Missy, a three-year old Llaso mix, who he adopted at the shelter. Dr. Winthrop is
          passionate about spay and neuter and pet adoption, and works tireless hours outside the clinic, performing free
          spay and neuter surgeries for the shelter.</p>
      </div>
    </section>


=== FORMS ===

-> for fieldsets and general div wrappers
	-> "form-group"
	-> "form-inline"
	-> "has-danger/success/warning"
-> for inputs (text, email, number), textareas, selects
	-> "form-control"
	-> "form-control-sm/lg"
	-> "form-control-danger/success"
-> for labels
	-> "form-control-label"
-> for smalls
	-> "form-text text-muted"
--> checkboxes and radio buttons

-> "form-check" -> for div wrappers of checkboxes and radio buttons
-> "form-check-inline" -> for div wrappers of checkboxes and radio buttons -> makes inline
-> "form-check-input" -> for inputs(radio and checkbox)
-> "form-check-label" -> for labels of radio and checkbox

--> layout

-> use normal container > row > col layout options 
-> add "col-form-label" for labels


--> input groups 

      <div class="form-group">
        <label class="form-control-label" for="donationamt">Donation Amount</label>
        <div class="input-group">
          <span class="input-group-addon">$</span>
          <input type="text" class="form-control" id="donationamt" placeholder="Amount">
        </div>
      </div>


// can use <span class="input-group-btn"><button.....


=== INTERACTIVE ===

























