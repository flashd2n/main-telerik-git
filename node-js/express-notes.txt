--- BASIC SETUP ---

-> npm install --save express
-> in server.js
	-> const app = require('express');
	-> const app = express();
	-> app.listen(PORT);

--- BASIC ROUTES ---

-> app.get('/', (req, res) {//...})
	-> res.status(200/300/400/500)
	-> res.send(...); -> sends response
	-> res.json(...); -> sends json response identical to the above (for json) -> both set content type correctly

-> app.get('*', (req, res) {res.redirect('/404')}); // -> place after everything in server.js to catch all unrecognized routes and direct to 404 page

-> app.post('/api/items', (req, res) => {
        const body = req.body;
        console.log(body);
        res.send(true);
    });
	-> need body-parser to have access to req.body
		-> require body-parser
		-> app.use(bodyParser.json());
		-> app.use(bodyParser.urlencoded({extended: true}));

	-> !!! client MUST specify content-type in request headers !!!
	-> !!! client MUST send valid JSON -> properties as strings

-- WORKING WITH PARAMS --

-> app.get('/:id', (req, res) => {//..})

	-> const id = req.params.id;
	-> if NO item is found with that id
		-> can next(ERROR);
		-> can res.status(400).send('oops')
		-> can res.redirect('/404'); --> maybe best to redirect to 404..maybe res.status(404).redirect('/404')

-- WORKING WITH QUERY PARAMS --

for url hit = /items?page=1&size=3&q=k

-> app.get('/items', (req, res) => {//..}) // DO NOT specidy ':' like in params above
	-> let {q, page, size} = req.query; // get all the query params
	-> check for presence
		-> page = parseInt(page, 10) || 1;
		-> size = parseInt(size, 10) || 10;
		-> if(q) { do filtering based on q }
	-> slice the data -> result = result.slice((page-1)*size, page*size);
	-> res.send(result);


-> BETTER ROUTES

	-> const { Router } = require('express');
	-> const router = new Router();
	-> router.route('/').get(//..).post(//..)
	-> app.use('/api', router);

	-> can have router chaining -. router.use('/someRoute', anotherRouter)








